import{m as d}from"./util.d12da382.js";import{_ as f,r as o,o as a,g as s,w as i,c as m,i as p,l as h,t as b,F as q,m as y}from"./index.cc0542f8.js";const g={mixins:[d],props:{modelValue:{type:[String,Number],required:!1},valueKey:{type:String,required:!1,default(){return"value"}},labelKey:{type:String,required:!1,default(){return"label"}},nullAble:{type:Boolean,required:!1,default(){return!0}},request:{type:Function,required:!1},param:{type:String,required:!1,default(){}},responseTransfer:{type:Function,required:!1,default(e){return e}}},data(){return{bindValue:[],list:[]}},watch:{modelValue:{handler(){this.modelValue&&(this.bindValue=this.modelValue)},immediate:!0}},methods:{fetchData:async function(){if(!this.$DictcontrolOption&&!this.$DictcontrolOption.request&&!this.request)return console.warn("DictControl: The required configuration [request] is missing!");const e=this.request||this.$DictcontrolOption.request;if(typeof e!="function")return console.warn("DictControl: [request] must be a Function!");this.list=this.responseTransfer(await e(this.param))}},created(){this.fetchData()}};function V(e,r,l,_,n,x){const u=o("el-checkbox"),c=o("el-checkbox-group");return a(),s(c,y({modelValue:n.bindValue,"onUpdate:modelValue":r[0]||(r[0]=t=>n.bindValue=t)},e.$attrs,{onChange:r[1]||(r[1]=t=>e.$emit("update:modelValue",t))}),{default:i(()=>[(a(!0),m(q,null,p(n.list,t=>(a(),s(u,{label:t[l.valueKey]},{default:i(()=>[h(b(t[l.labelKey]),1)]),_:2},1032,["label"]))),256))]),_:1},16,["modelValue"])}const w=f(g,[["render",V]]);export{w as default};
