import{m as e}from"./util.d12da382.js";import{_ as t,r as a,o as i,g as r,w as l,c as s,i as n,l as u,t as o,F as d,m as c}from"./index.cc0542f8.js";const m=t({mixins:[e],props:{modelValue:{type:[String,Number],required:!1},valueKey:{type:String,required:!1,default:()=>"value"},labelKey:{type:String,required:!1,default:()=>"label"},nullAble:{type:Boolean,required:!1,default:()=>!0},request:{type:Function,required:!1},param:{type:String,required:!1,default(){}},responseTransfer:{type:Function,required:!1,default:e=>e}},data:()=>({bindValue:[],list:[]}),watch:{modelValue:{handler(){this.modelValue&&(this.bindValue=this.modelValue)},immediate:!0}},methods:{fetchData:async function(){if(!this.$DictcontrolOption&&!this.$DictcontrolOption.request&&!this.request)return console.warn("DictControl: The required configuration [request] is missing!");const e=this.request||this.$DictcontrolOption.request;if("function"!=typeof e)return console.warn("DictControl: [request] must be a Function!");this.list=this.responseTransfer(await e(this.param))}},created(){this.fetchData()}},[["render",function(e,t,m,p,f,h){const q=a("el-checkbox"),b=a("el-checkbox-group");return i(),r(b,c({modelValue:f.bindValue,"onUpdate:modelValue":t[0]||(t[0]=e=>f.bindValue=e)},e.$attrs,{onChange:t[1]||(t[1]=t=>e.$emit("update:modelValue",t))}),{default:l((()=>[(i(!0),s(d,null,n(f.list,(e=>(i(),r(q,{label:e[m.valueKey]},{default:l((()=>[u(o(e[m.labelKey]),1)])),_:2},1032,["label"])))),256))])),_:1},16,["modelValue"])}]]);export{m as default};
