import{m as a}from"./util.d12da382.js";import{_ as i,r as o,o as l,g as u,m as d}from"./index.1fc5d137.js";const p={mixins:[a],props:{modelValue:{type:[String,Number],required:!1},valueKey:{type:String,required:!1,default(){return"value"}},labelKey:{type:String,required:!1,default(){return"label"}},nullAble:{type:Boolean,required:!1,default(){return!0}},request:{type:Function,required:!1},param:{type:String,required:!1,default(){}},responseTransfer:{type:Function,required:!1,default(e){return e}}},data(){return{bindValue:[],list:[]}},watch:{modelValue:{handler(){this.modelValue&&(this.bindValue=this.modelValue)},immediate:!0}},methods:{fetchData:async function(){if(!this.$DictcontrolOption&&!this.$DictcontrolOption.request&&!this.request)return console.warn("DictControl: The required configuration [request] is missing!");const e=this.request||this.$DictcontrolOption.request;if(typeof e!="function")return console.warn("DictControl: [request] must be a Function!");this.list=this.responseTransfer(await e(this.param))}},created(){this.fetchData()}};function c(e,t,f,m,r,h){const s=o("el-cascader");return l(),u(s,d(e.$attrs,{modelValue:r.bindValue,"onUpdate:modelValue":t[0]||(t[0]=n=>r.bindValue=n),options:r.list,props:{value:this.valueKey,label:this.labelKey},onChange:t[1]||(t[1]=n=>e.$emit("update:modelValue",n))}),null,16,["modelValue","options","props"])}var V=i(p,[["render",c]]);export{V as default};
