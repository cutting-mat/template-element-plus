import{_ as u,r as p,o as h,g as f,w as n,f as s}from"./index.cc0542f8.js";const m={name:"input-number",model:{prop:"value",event:"change"},props:{value:{type:[String,Number],required:!1,default:""},min:{type:Number,required:!1,default:-1/0},max:{type:Number,required:!1,default:1/0},precision:{type:Number,required:!1,default:0},round:{type:Boolean,required:!1,default:!1},zeroFill:{type:Boolean,required:!1,default:!1},placeholder:{type:String,required:!1,default:"\u8BF7\u8F93\u5165"},disabled:{type:Boolean,required:!1,default:!1},size:{type:String,required:!1,default:""},readonly:{type:Boolean,required:!1,default:!1}},data(){return{myValue:null}},watch:{value:{handler(e){let t=e;isNaN(parseFloat(t))||(t<this.min&&this.myValue!==""&&(t=this.min),t>this.max&&(t=this.max)),this.myValue=t},immediate:!0},myValue:{handler(){this.$emit("change",this.myValue)},immediate:!0}},methods:{fillZero(e){if(e==null||e==="")return null;const t=this.precision;if(e.split&&this.zeroFill&&t>0){const a=e.indexOf(".");let l;a===-1?(l=t,e+="."):l=t-(e.length-1-a);for(let i=0;i<l;i++)e+="0"}return e},handleChange(){let e=this.myValue;e<this.min&&this.myValue!==""&&(e=this.min),e>this.max&&(e=this.max),this.myValue=this.retainDecimal(e,this.precision),this.zeroFill&&this.precision>0&&this.$nextTick(()=>{this.myValue=this.fillZero(this.myValue)})},handleInput(e){if(e==null)return null;this.myValue=e.toString().trim().replace(/[^\d.-]/g,"").replace(/\./,"$#$").replace(/\./g,"").replace("$#$",".").replace(/^-/,"$#$").replace(/-/g,"").replace("$#$","-")},retainDecimal(e,t){if(t<0&&(t=0),e.split&&e.indexOf(".")===e.length-1&&t>0||e.split&&e.indexOf("-")===e.length-1)return e;if(isNaN(parseFloat(e)))return null;let a;return this.round?a=Math.round(Math.round(parseFloat(e)*Math.pow(10,t)))/Math.pow(10,t):a=Math.floor(Math.round(parseFloat(e)*Math.pow(10,t)))/Math.pow(10,t),a=a.toString(),a}}};function y(e,t,a,l,i,r){const o=p("el-input");return h(),f(o,{value:i.myValue,placeholder:a.placeholder,disabled:a.disabled,size:a.size,readonly:a.readonly,onInput:r.handleInput,onChange:t[0]||(t[0]=d=>r.handleChange(d,!0))},{prepend:n(()=>[s(e.$slots,"prepend")]),append:n(()=>[s(e.$slots,"append")]),_:3},8,["value","placeholder","disabled","size","readonly","onInput"])}const g=u(m,[["render",y]]);export{g as default};
